import pytest
import LA
import GS

global m1, m2, m3

m1 = [[1, -1, 1], [1, 0, 1], [1, 1, 2]]
m2 = [[1, 2, 3], [-1, 1, 2], [1, -2, 0]]


#I could not figure out how to write the assert to check if matrices are very similiar so for now these tests all fail

def test_SGS():
    #Q =    14^.5/14        -3(10^.5)/10     35^.5/35
    #       14^.5/7         0               -35^.5/7
    #       3(14^.5)/14     10^.5/10        3(35^.5)/35
    
    assert GS.SGS(m2)[0] == [[(14**.5)/14,(14**.5)/7, 3*(14**.5)/14],[-3*(10**.5)/10, 0, (10**.5)/10],[(35**.5)/35,-(35**.5)/7,3*(35**.5)/35]]
    assert LA.MxM(GS.SGS(m2)[0],GS.SGS(m2)[1]) == m2
    
    #Q =    3^.5/3          6^.5/6          -2^.5/2
    #       -3^.5/3         6^.5/3          0
    #       3^.5/3          6^.5/6          2^.5/2
    
    assert GS.SGS(m1)[0] == [[(3**.5)/3,-(3**.5)/3,(3**.5)/3],[(6**.5)/6,(6**.5)/3,(6**.5)/6],[-(2**.5)/2,0,(2**.5)/2]]
    assert LA.MxM(GS.SGS(m1)[0],GS.SGS(m1)[1]) == m1
    
def test_Q():
    #Q =    14^.5/14        -3(10^.5)/10     35^.5/35
    #       14^.5/7         0               -35^.5/7
    #       3(14^.5)/14     10^.5/10        3(35^.5)/35
    assert GS.Q(m2) == [[(14**.5)/14,(14**.5)/7, 3*(14**.5)/14],[-3*(10**.5)/10, 0, (10**.5)/10],[(35**.5)/35,-(35**.5)/7,3*(35**.5)/35]]
    
    #Q =    3^.5/3          6^.5/6          -2^.5/2
    #       -3^.5/3         6^.5/3          0
    #       3^.5/3          6^.5/6          2^.5/2
    assert GS.Q(m1) == [[(3**.5)/3,-(3**.5)/3,(3**.5)/3],[(6**.5)/6,(6**.5)/3,(6**.5)/6],[-(2**.5)/2,0,(2**.5)/2]]
    
pytest.main()